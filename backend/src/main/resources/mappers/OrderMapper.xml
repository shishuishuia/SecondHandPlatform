<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.shishuishuia.mapper.OrderMapper">

    <resultMap id="orderWithHandPhoneMap" type="com.shishuishuia.pojo.Orders">
        <!-- Orders properties -->
        <id property="orderId" column="order_id"/>
        <result property="buyerId" column="buyer_id"/>
        <result property="sellerId" column="seller_id"/>
        <result property="phoneId" column="phone_id"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="payTime" column="pay_time" jdbcType="TIMESTAMP"/>
        <result property="deliverTime" column="deliver_time" jdbcType="TIMESTAMP"/>
        <result property="confirmTime" column="confirm_time" jdbcType="TIMESTAMP"/>
        <result property="cancelTime" column="cancel_time" jdbcType="TIMESTAMP"/>
        <result property="finishTime" column="finish_time" jdbcType="TIMESTAMP"/>
        <result property="orderState" column="order_state"/>
        <result property="payment" column="payment"/>
        <result property="isDeleted" column="is_deleted"/>

        <!-- HandPhone association -->
        <association property="handPhone" javaType="com.shishuishuia.pojo.HandPhone">
            <id property="id" column="id"/>
            <result property="state" column="state"/>
            <result property="price" column="price"/>
            <result property="browse" column="browse"/>
            <result property="publishedtime" column="publishedtime" jdbcType="TIMESTAMP"/>
            <result property="headline" column="headline"/>
            <result property="detail" column="detail"/>
            <result property="quality" column="quality"/>
            <result property="location" column="location"/>
            <result property="photos" column="photos"
                    typeHandler="com.shishuishuia.utils.StringToListTypeHandler"/>

        </association>
    </resultMap>


    <insert id="createOrder"
            useGeneratedKeys="true"
            keyColumn="order_id"
            keyProperty="orderId">
        -- 插入新订单（仅需必要字段，其他字段自动填充）
        INSERT INTO orders (
            buyer_id,
            seller_id,
            phone_id,
            payment
        ) VALUES (
                     #{buyerId},   -- 买家ID（需存在于users表）
                     #{sellerId},   -- 卖家ID（需存在于users表）
                     #{phoneId},   -- 商品ID（需存在于phones表）
                     #{payment}  -- 支付金额
                 );
    </insert>

    <update id="updateOrderStateInt">
        update orders
        set order_state=#{state}
        where order_id=#{orderId}
    </update>
    <update id="updatePayTime">
        update orders
        set pay_time=#{payTime}
        where order_id=#{orderId}
    </update>
    <update id="updatedeliverTime">
        update orders
        set deliver_time=#{deliverTime}
        where order_id=#{orderId}
    </update>
    <update id="updateconfirmTime">
        update orders
        set confirm_time=#{confirmTime}
        where order_id=#{orderId}
    </update>
    <update id="updatecancelTime">
        update orders
        set cancel_time=#{cancelTime}
        where order_id=#{orderId}
    </update>
    <update id="updatefinishTime">
        update orders
        set finish_time=#{finishTime}
        where order_id=#{orderId}
    </update>
    <update id="deleteByOrderIdInt">
        update orders
        set is_deleted=1
        where order_id=#{orderId}
    </update>

    <select id="getOrderDetailById" resultMap="orderWithHandPhoneMap">
        SELECT
            orders.*,
            h.state,
            h.price,
            h.browse,
            h.publishedtime,
            h.headline,
            h.detail,
            h.quality,
            h.location,
            GROUP_CONCAT(DISTINCT p.photo) AS photos
        FROM orders
                 INNER JOIN handphone h ON orders.phone_id = h.id
                INNER JOIN phonephoto p ON orders.phone_id = p.id
        WHERE order_id = #{id}
        GROUP BY orders.order_id;
    </select>
    <select id="getBuyOrderListByBuyerId"  resultMap="orderWithHandPhoneMap">
        SELECT
            orders.*,
            h.state,
            h.price,
            h.browse,
            h.publishedtime,
            h.headline,
            h.detail,
            h.quality,
            h.location,
            u.avatar,
            u.name,
            GROUP_CONCAT(DISTINCT p.photo) AS photos
        FROM orders
                 INNER JOIN handphone h ON orders.phone_id = h.id
                 INNER JOIN user u ON orders.seller_id = u.id
                INNER JOIN phonephoto p ON orders.phone_id = p.id
        WHERE buyer_id = #{id} AND is_deleted=0
        GROUP BY orders.order_id;
    </select>
    <select id="getSellOrderListBySellerId"  resultMap="orderWithHandPhoneMap">
        SELECT
            orders.*,
            h.state,
            h.price,
            h.browse,
            h.publishedtime,
            h.headline,
            h.detail,
            h.quality,
            h.location,
            u.avatar,
            u.name,
            GROUP_CONCAT(DISTINCT p.photo) AS photos
        FROM orders
                 INNER JOIN handphone h ON orders.phone_id = h.id
                 INNER JOIN user u ON orders.buyer_id = u.id
                 INNER JOIN phonephoto p ON orders.phone_id = p.id
        WHERE seller_id = #{id} AND is_deleted=0
        GROUP BY orders.order_id;
    </select>
    <select id="getOrderDetailByphoneId" resultType="com.shishuishuia.pojo.Orders">
        select *
        from orders
        where phone_id = #{id}
    </select>
    <select id="getBuyerOrderlist" resultMap="orderWithHandPhoneMap">
        SELECT
            orders.*,
            h.state,
            h.price,
            h.browse,
            h.publishedtime,
            h.headline,
            h.detail,
            h.quality,
            h.location,
            u.avatar,
            u.name,
            (SELECT GROUP_CONCAT(p.photo) FROM phonephoto p WHERE p.id = orders.phone_id) AS photos
        FROM orders
                 INNER JOIN handphone h ON orders.phone_id = h.id
                 INNER JOIN user u ON orders.seller_id = u.id
        <where>
            orders.buyer_id = #{userId}
            AND orders.is_deleted = 0
            <if test="status != null and status != ''">
                AND orders.order_state = #{status}
            </if>
            <if test="keyword != null and keyword != ''">
                AND (orders.order_id LIKE CONCAT('%', #{keyword}, '%')
                OR h.headline LIKE CONCAT('%', #{keyword}, '%'))
            </if>
            <if test="startTime != null">
                AND orders.create_time >= #{startTime}
            </if>
            <if test="endTime != null">
                AND orders.create_time &lt;= #{endTime}
            </if>
        </where>
        GROUP BY orders.order_id;
    </select>
    <select id="getSellerOrderlist" resultMap="orderWithHandPhoneMap">
        SELECT
            orders.*,
            h.state,
            h.price,
            h.browse,
            h.publishedtime,
            h.headline,
            h.detail,
            h.quality,
            h.location,
            u.avatar,
            u.name,
            (SELECT GROUP_CONCAT(p.photo) FROM phonephoto p WHERE p.id = orders.phone_id) AS photos
        FROM orders
            INNER JOIN handphone h ON orders.phone_id = h.id
            INNER JOIN user u ON orders.buyer_id = u.id
        <where>
            orders.seller_id = #{userId}
            AND orders.is_deleted = 0
            <if test="status != null and status != ''">
                AND orders.order_state = #{status}
            </if>
            <if test="keyword != null and keyword != ''">
                AND (orders.order_id LIKE CONCAT('%', #{keyword}, '%')
                OR h.headline LIKE CONCAT('%', #{keyword}, '%'))
            </if>
            <if test="startTime != null">
                AND orders.create_time >= #{startTime}
            </if>
            <if test="endTime != null">
                AND orders.create_time &lt;= #{endTime}
            </if>
        </where>
        GROUP BY orders.order_id;
    </select>
</mapper>

